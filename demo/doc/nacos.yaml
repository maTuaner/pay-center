spring:
  redis:
    host:
    port:
    password:
    timeout: 1000
    lettuce:
      pool:
        enabled: true
        max-active: 10 # 连接池最大连接数（使用负值表示没有限制）
        max-idle: 10 # 连接池中的最大空闲连接
        min-idle: 10 # 连接池中的最小空闲连接
        max-wait: 6000 # 连接池最大阻塞等待时间（使用负值表示没有限制）
  datasource:
    druid:
      # 初始连接数
      initial-size: 8
      # 最大连接池数量
      max-active: 8
      # 最小连接池数量
      min-idle: 8
      # 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
      max-wait: 5000
      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      pool-prepared-statements: false
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-pool-prepared-statement-per-connection-size: -1
      # 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
      validation-query: select 'x'
      # 单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
      validation-query-timeout: 5
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-borrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      #有两个含义：
      #1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
      #2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
      time-between-eviction-runs-millis: 5000
      # 连接保持空闲而不被驱逐的最小时间
      min-evictable-idle-time-millis: 5000
      filter:
        slf4j:
          enabled: true
        wall:
          enabled: true
          db-type: mysql
          log-violation: true
          throw-exception: false
          config:
            call-allow: false
            truncate-allow: false
            use-allow: false
            describe-allow: false
            drop-table-allow: false
            show-allow: false
            delete-where-none-check: true
            update-where-none-check: true
            metadata-allow: false
      master:
        url:
        username:
        password:
      slave:
        url:
        username:
        password:
logging:
  level:
    com.hkuo.demo.mapper: debug
db:
  mybatis:
    mapper-scan:
      base-package: com.hkuo.demo.mapper
